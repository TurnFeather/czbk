<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
	<!-- 
		constant： 配置常量
			* name：指定的时struts2框架底层提供的资源文件default.properties中配置的"常量"
			* value:指定的时配置常量的值。
			* 在struts.xml文件中，配置的常量值会覆盖底层提供的default.properties资源文件中配置的常量值
		配置struts2框架页面中请求连接的后缀名，如果指定多个的话用","隔开
	 -->
<!--<constant name="struts.action.extension" value="action,,ddd"></constant> -->
<!--  
	### when set to true, Struts will act much more friendly for developers. This
    ### includes:
	### - struts.i18n.reload = true
	### - struts.configuration.xml.reload = true
	### - raising various debug or ignorable problems to errors
	###   For example: normally a request to foo.action?someUnknownField=true should
	###                be ignored (given that any value can come from the web and it
	###                should not be trusted). However, during development, it may be
	###                useful to know when these errors are happening and be told of
	###                them right away.
-->
	<constant name="struts.devMode" value="true"></constant>
<!-- /primer/userAction.action -->
	<!-- 
		package: 包
			*name 包名，唯一的，必须项
			*namespace 命名空间，唯一的，相当于房间号，可选项，省略情况下是"/" 页面请求链接的前半部分
			*extends：继承
				*extends="struts-default" ；struts框架底层的核心包struts2-core-2.2.3.jar下的struts-default.xml文件中的一个包名
	 			为什么要继承？
	 				* 因为struts2框架底层提供的struts-default.xml声明了所有的拦截器和拦截器栈
	 				    知道在struts2 框架运行时执行struts-default.xml文件中的拦截器栈
	 				* 如果不继承struts-default.xml文件，就没有办法是用struts2框架提供的所有拦截器
	 -->
	<package name="primer" namespace="/primer" extends="struts-default">
		<!-- 默认要执行的Action，当找不到请求的action名时 
			* name ： 指定默认要执行action的名称
		-->
		<default-action-ref name="helloWorldAction"></default-action-ref>
		<!-- 
			action:
				*name:对应页面中请求链接的后半部分
				*class：对应要执行路径的后半部分
		 -->
		<action name="helloWorldAction" class="cn.itcast.primer.HelloWorldAction">
			<!-- 
				result:结果类型
					*name:对应的执行的类的方法的返回值
						System.out.println("Hello World Action ****** excute");
						return "success";
					*后半部分的文本内容：要转向到的页面
			 -->
			<result name="success">/success.jsp</result>
		</action>
		
		<!-- 
			没有为action指定class
				*在struts2框架底层的struts-default.xml文件中，配置了默认执行的类
					com.opensymphony.xwork2.ActionSupport
					public String execute() throws Exception {
       					 return SUCCESS;
    				}
    			* 实际上，默认执行的是底层提供的ActionSupport类的execute()方法
    			* result结果类型，默认是根据struts2框架底层提供的ActionSupport类的execute（）方法返回值，可进行跳转
		 -->
		
 		<action name="ActionNoClass">
			<!-- 
				result:结果类型
					*name:对应的执行的类的方法的返回值
						System.out.println("Hello World Action ****** excute");
						return "success";
					*后半部分的文本内容：要转向到的页面
			 -->
			<result name="success">/success.jsp</result>
		</action>
	</package>
</struts>
